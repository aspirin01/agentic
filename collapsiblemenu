from PyQt6.QtWidgets import (
    QWidget, QVBoxLayout, QScrollArea, QPushButton
)
from PyQt6.QtGui import QIcon
from PyQt6.QtCore import Qt


class CollapsibleSection(QWidget):
    def __init__(self, title="", icon=None, parent=None):
        super().__init__(parent)
        self.layout = QVBoxLayout(self)
        self.layout.setContentsMargins(0, 0, 0, 0)

        self.toggle_button = QPushButton(title)
        if icon:
            self.toggle_button.setIcon(QIcon(icon))
        self.toggle_button.setCheckable(True)
        self.toggle_button.setChecked(False)
        self.toggle_button.setCursor(Qt.CursorShape.PointingHandCursor)
        self.toggle_button.clicked.connect(self.toggle)

        self.toggle_button.setStyleSheet("""
            QPushButton {
                background-color: #f5f5f5;
                padding: 8px 10px;
                font-size: 14px;
                text-align: left;
                border: none;
            }
            QPushButton:hover {
                background-color: #e0e0e0;
            }
        """)

        self.content = QWidget()
        self.content_layout = QVBoxLayout(self.content)
        self.content_layout.setContentsMargins(15, 0, 0, 0)
        self.content_layout.setSpacing(4)
        self.content.setMaximumHeight(0)

        self.layout.addWidget(self.toggle_button)
        self.layout.addWidget(self.content)

    def add_button(self, text, on_click=None):
        btn = QPushButton(text)
        btn.setCursor(Qt.CursorShape.PointingHandCursor)
        btn.setStyleSheet("""
            QPushButton {
                background-color: #ffffff;
                padding: 6px 20px;
                text-align: left;
                border: none;
                font-size: 13px;
            }
            QPushButton:hover {
                background-color: #e8e8e8;
            }
        """)
        if on_click:
            btn.clicked.connect(lambda _, name=text: on_click(name))
        self.content_layout.addWidget(btn)

    def toggle(self):
        if self.toggle_button.isChecked():
            self.content.setMaximumHeight(16777215)
        else:
            self.content.setMaximumHeight(0)


class Sidebar(QWidget):
    def __init__(self, navigate_to: callable, parent=None):
        super().__init__(parent)
        self.setFixedWidth(230)

        scroll = QScrollArea()
        scroll.setWidgetResizable(True)

        container = QWidget()
        layout = QVBoxLayout(container)
        layout.setContentsMargins(0, 10, 0, 10)

        # Sidebar structure
        section_data = [
            ("Workspace", "icons/flame.png", ["Sign In", "Sign Up"]),
            ("Tools", "icons/pen.jpg", ["File System Tool", "Web Scraper"]),
            ("Agents", "icons/books.jpg", ["Installed Agents", "Marketplace"]),
            ("Record", "icons/record.png", None),
            ("New Chat", "icons/plus.png", None),
        ]

        for title, icon_path, children in section_data:
            if children:  # Collapsible section
                section = CollapsibleSection(title=title, icon=icon_path)
                for child in children:
                    section.add_button(child, on_click=navigate_to)
                layout.addWidget(section)
            else:  # Flat button
                btn = QPushButton(title)
                btn.setIcon(QIcon(icon_path))
                btn.setCursor(Qt.CursorShape.PointingHandCursor)
                btn.setStyleSheet("""
                    QPushButton {
                        background-color: #f5f5f5;
                        padding: 8px 10px;
                        font-size: 14px;
                        text-align: left;
                        border: none;
                    }
                    QPushButton:hover {
                        background-color: #e0e0e0;
                    }
                """)
                btn.clicked.connect(lambda _, name=title: navigate_to(name))
                layout.addWidget(btn)

        layout.addStretch()
        scroll.setWidget(container)

        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(0, 0, 0, 0)
        main_layout.addWidget(scroll)